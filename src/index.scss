// Import variables first
@import './assets/styles/variables';

:root {
  // Generate CSS custom properties from SASS variables
  // This allows both SASS and CSS variable usage
  --icon-bg-color: #{$theme-accent};
  --icon-bg-color-gradient: #{$theme-accent-gradient};
  --icon-bg-color-r: #{$theme-accent-r};
  --icon-bg-color-g: #{$theme-accent-g};
  --icon-bg-color-b: #{$theme-accent-b};
  --dark-mode-text: #{$color-text-light};
}

html {
  scroll-behavior: smooth;
}

body {
  margin: 0;
  font-family: $font-family-system;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: $font-size-base !important;
}

code {
  font-family: $font-family-monospace !important;
  font-size: $font-size-code !important;
}

.main-container {
  position: relative;
  background-color: $color-dark-bg;
  transition: background-color $transition-normal;
}

a {
  text-decoration: none;
}

a:hover {
  color: $theme-accent;
  transition: color $transition-fast, background-color $transition-fast, border-color $transition-fast;
}

p, a, h1, h2, h3, h4, h5, label, button {
  color: white;
  font-family: $font-family-primary;
  transition: color $transition-normal;
}

.dark-mode {
  p, a, h1, h2, h3, h4, h5, label, button {
    color: var(--dark-mode-text);
  }
}

.navigation-bar {
  justify-content: space-between;
  background-color: $color-dark-bg;
  transition: background-color $transition-normal;

  button {
    font-size: $font-size-base;
    font-family: $font-family-primary;
    text-transform: initial;
    padding: 6px $spacing-sm;
    transition: color $transition-normal,
                background-color $transition-normal,
                transform $transition-fast;
    
    &:hover {
      transform: translateY(-1px);
    }
    
    &:focus {
      outline: 2px solid rgba($theme-accent-r, $theme-accent-g, $theme-accent-b, 0.8);
      outline-offset: 2px;
      border-radius: 4px;
    }
  }

  svg {
    cursor: pointer;
    transition: color $transition-normal,
                transform $transition-fast;
    
    &:hover {
      transform: scale(1.1);
    }
    
    &:focus {
      outline: 2px solid rgba($theme-accent-r, $theme-accent-g, $theme-accent-b, 0.8);
      outline-offset: 4px;
      border-radius: 4px;
    }
  }
}

.navigation-bar-responsive {
  span, p {
    font-family: $font-family-primary;
  }
}

/* Remove color override - handled by component styling */
.dark-mode .navigation-bar-responsive {
  span, p {
    color: var(--dark-mode-text);
  }
}

.light-mode .navigation-bar-responsive {
  span, p {
    color: $color-text-dark;
  }
}

.container {
  margin-top: $navbar-height;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.header-image {
  width: 100%;
  height: $header-height;

  img {
    width: 100%;
    height: $header-height;
    object-fit: cover;
  }
}

.mobile-menu-top {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: $spacing-xs;
  font-weight: bold;
}

.items-container {
  padding: $container-padding-mobile $container-padding-desktop;
  text-align: left;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.light-mode {
  background-color: $color-light-bg;

  .navigation-bar {
    background-color: $color-light-bg;
    transition: background-color $transition-normal;
  }

  p, a, h1, h2, h3, h4, h5, label, button {
    color: $color-text-dark;
  }

  a:hover {
    color: $theme-accent;
    transition: color $transition-fast, background-color $transition-fast, border-color $transition-fast;
  }

  .navigation-bar svg {
    color: $color-text-dark;
  }

  .about-section {
    background-image: url("./assets/images/bg-light.png");
  }

  .skills-container svg {
    color: $color-text-dark;
    transition: color $transition-normal;
  }

  .chip {
    background-color: theme-color($theme-light, divider);
    box-shadow: $shadow-sm;
    transition: background-color $transition-normal, color $transition-normal;
  }

  .chip span {
    color: $color-neutral-dark;
  }

  .vertical-timeline::before {
    background-color: theme-color($theme-light, timeline-line);
    transition: background-color $transition-normal;
  }

  .vertical-timeline-element-content-arrow {
    border-right: 7px solid theme-color($theme-light, divider) !important;
    transition: border-color $transition-normal;
  }

  .vertical-timeline--animate .vertical-timeline-element-content.bounce-in {
    box-shadow: $shadow-sm;
  }

  .vertical-timeline--two-columns .vertical-timeline-element-content .vertical-timeline-element-date {
    color: gray;
  }

  .flex-chips .chip-title {
    color: $color-text-dark;
  }
}

.dark-mode {
  .vertical-timeline::before {
    background-color: theme-color($theme-dark, timeline-line);
    transition: background-color $transition-normal;
  }

  .vertical-timeline-element-content-arrow {
    border-right: 7px solid theme-color($theme-dark, arrow) !important;
    transition: border-color $transition-normal;
  }

  .vertical-timeline-element-icon {
    box-shadow: 0 0 0 4px theme-color($theme-dark, timeline-icon-shadow-1), 
                0 0 0 8px theme-color($theme-dark, timeline-icon-shadow-2) !important;
    transition: box-shadow $transition-normal;
  }

  .vertical-timeline-element-content {
    box-shadow: 0px 3px 1px -2px rgba($theme-accent-r, $theme-accent-g, $theme-accent-b, $shadow-opacity-medium),
                0px 2px 2px 0px rgba($theme-accent-r, $theme-accent-g, $theme-accent-b, $shadow-opacity-light),
                0px 1px 5px 0px rgba($theme-accent-r, $theme-accent-g, $theme-accent-b, $shadow-opacity-light) !important;
    transition: box-shadow $transition-normal;
  }

  .vertical-timeline--animate .vertical-timeline-element-content.bounce-in {
    box-shadow: 0px 3px 1px -2px rgba($theme-accent-r, $theme-accent-g, $theme-accent-b, $shadow-opacity-medium),
                0px 2px 2px 0px rgba($theme-accent-r, $theme-accent-g, $theme-accent-b, $shadow-opacity-light),
                0px 1px 5px 0px rgba($theme-accent-r, $theme-accent-g, $theme-accent-b, $shadow-opacity-light) !important;
    transition: box-shadow $transition-normal;
  }
}

@media screen {
  @media (max-width: $breakpoint-tablet) {
    .items-container {
      padding: $container-padding-mobile $container-padding-mobile;
    }
  }
}